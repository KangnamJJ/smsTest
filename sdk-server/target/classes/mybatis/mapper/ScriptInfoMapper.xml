<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
	例如namespace="me.gacl.mapping.orderMapper"就是me.gacl.mapping(包名)+orderMapper(orderMapper.xml文件去除后缀)
-->
<!-- 脚本文件信息映射 -->
<mapper namespace="com.spier.mapper.task.IScriptInfoMapper">
     
    <!--通过<resultMap>映射实体类属性名和表的字段名对应关系 -->
	<resultMap id="scriptInfoResultMap" type="com.spier.common.bean.db.ScriptInfo" >
		<!-- 用id属性来映射主键字段 -->
		<id property="mIndex" column="_id" jdbcType="INTEGER" />
		<!-- 用result属性来映射非主键字段 -->
		<result property="mScriptId" column="script_id" />
		<result property="mHash" column="hash" />
		<result property="mVersionCode" column="ver_code" />
		<result property="mCountryAbb" column="country" />
		<result property="mOperator" column="op" />
		<result property="mShortCode" column="sc" />
		<result property="mNetEnv" column="env" />
		<result property="mFilePath" column="path" />
		<result property="mScriptDesc" column="script_desc" />
	</resultMap>
	
	<!--通过<resultMap>映射实体类属性名和表的字段名对应关系 -->
	<parameterMap id="scriptInfoParamMap" type="com.spier.common.bean.db.ScriptInfo" >
		<!-- 用result属性来映射非主键字段 -->
		<parameter property="mScriptId" resultMap="scriptInfoResultMap" />
		<parameter property="mHash" resultMap="scriptInfoResultMap" />
		<parameter property="mVersionCode" resultMap="scriptInfoResultMap" />
		<parameter property="mCountryAbb" resultMap="scriptInfoResultMap" />
		<parameter property="mOperator" resultMap="scriptInfoResultMap" />
		<parameter property="mShortCode" resultMap="scriptInfoResultMap" />
		<parameter property="mNetEnv" resultMap="scriptInfoResultMap" />
		<parameter property="mFilePath" resultMap="scriptInfoResultMap" />
		<parameter property="mScriptDesc" resultMap="scriptInfoResultMap" />
	</parameterMap>
	
	<!-- 插入脚本文件信息 -->
	<insert id="insertRecord" useGeneratedKeys="true" keyProperty="info.mIndex" keyColumn="_id"
	    parameterType="com.spier.common.bean.db.ScriptInfo" parameterMap="scriptInfoParamMap">
	    insert into ${tableName} (script_id, hash, ver_code, country, op, sc, env, path, script_desc)
	    values 
	    (
	    	#{info.mScriptId}, #{info.mHash}, #{info.mVersionCode}, #{info.mCountryAbb},
	    	#{info.mOperator}, #{info.mShortCode}, #{info.mNetEnv},#{info.mFilePath},#{info.mScriptDesc}
	    )
	</insert>
	
	<!-- 根据脚本信息序列号查询脚本文件记录 -->
	<select id="findRecordByInd" parameterType="int" resultMap="scriptInfoResultMap">
	    select * from ${tableName} where _id=#{ind}
	</select>
	
	<!-- 根据脚本id查询脚本文件记录 -->
	<select id="findRecordByScriptId" parameterType="string" resultMap="scriptInfoResultMap">
	    select * from ${tableName} where script_id=#{scriptId}
	</select>
	
	<!-- 脚本文件信息更新操作 -->
	<update id="updateRecordByInd" parameterType="com.spier.common.bean.db.ScriptInfo" parameterMap="scriptInfoParamMap">
	    update ${tableName} t set t.script_id=#{info.mScriptId}, t.hash=#{info.mHash}, t.ver_code=#{info.mVersionCode},
	    	t.country=#{info.mCountryAbb}, t.op=#{info.mOperator}, 
	    	t.env=#{info.mNetEnv}, t.path=#{info.mFilePath}, t.script_desc=#{info.mScriptDesc},
	    	t.sc = #{info.mShortCode}
	    where t._id=#{ind}
	</update>
	
	<!-- 脚本文件信息更新操作 -->
	<update id="updateRecordsByScriptId" parameterType="com.spier.common.bean.db.ScriptInfo" parameterMap="scriptInfoParamMap">
	    update ${tableName} t set t.script_id=#{info.mScriptId}, t.hash=#{info.mHash}, t.ver_code=#{info.mVersionCode},
	    	 t.country=#{info.mCountryAbb}, t.op=#{info.mOperator}, 
	    	t.env=#{info.mNetEnv}, t.path=#{info.mFilePath}, t.script_desc=#{info.mScriptDesc},
	    	t.sc = #{info.mShortCode}
	    where t.script_id=#{scriptId}
	</update>
	
	<delete id="deleteRecordByInd" parameterType="int">
	    delete from ${tableName} where _id=#{ind}
	</delete>
	
	<delete id="deleteRecordByScriptId" parameterType="string">
	    delete from ${tableName} where script_id=#{scriptId}
	</delete>
	
	<!-- 获取所有信息 -->
	<select id="getAll" resultMap="scriptInfoResultMap">
	    select * from ${tableName}
	</select>
	
	<!-- 根据国家、运营商、网络类型查询所有的脚本id -->
	<select id="findScriptIdsByKeyConds" resultType="string">
	    select script_id from ${tableName}
	    where country = #{abb} and op = #{op} and env = #{net}
	</select>
	
	<!-- 根据国家、运营商查询所有的脚本id -->
	<select id="findScriptIdsByCountryAbbAndOp" resultType="string">
	    select script_id from ${tableName}
	    where country = #{abb} and op = #{op}
	</select>

	<!-- 根据国家、运营商, 网络环境查询所有的脚本id -->
	<select id="getScriptInfosByCondition" resultType="String">
	    select script_id from ${tableName}
	    where country = #{abb} and op = #{op} and (env = #{net} || env = 101)
	</select>
	
</mapper>