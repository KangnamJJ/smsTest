<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
	例如namespace="me.gacl.mapping.orderMapper"就是me.gacl.mapping(包名)+orderMapper(orderMapper.xml文件去除后缀)
-->
<!-- 用户数据映射 -->
<mapper namespace="com.spier.mapper.IUserInfoMapper">
     
    <!--通过<resultMap>映射实体类属性名和表的字段名对应关系 -->
	<resultMap id="userInfoResultMap" type="com.spier.common.bean.db.UserInfo" >
		<!-- 用id属性来映射主键字段 -->
		<id property="mId" column="_id" jdbcType="INTEGER" />
		<!-- 用result属性来映射非主键字段 -->
		<result property="mName" column="name" />
		<result property="mAppName" column="app" />
		<result property="mChNo" column="ch_no" />
		<result property="mState" column="state" />
		<result property="mIsLoyalty" column="loyalty"/>
		<result property="mSessionId" column="session_id" />
		<result property="mSessionEstablishTime" column="session_es_time" />
		<!-- 关联手机信息 -->
		<result property="mPhoneInfoId" column="phone_info_id" />
		<!-- 关联手机卡信息 -->
		<result property="mPhoneNumber" column="phone_number" />
		<result property="mPrivileges" column="privileges" />
		<result property="mPhoneInfoValid" column="p_info_valid" />
		<result property="mPhoneInfoInvalidReason" column="p_info_inv_reason" />
		<result property="mShellVersion" column="sh_v" />
		<result property="mCreateTime" column="create_time" />
		<result property="mRecentHandshake" column="recent_hs_time" />
		<result property="mIp" column="ip" />
		<result property="mCountry" column="country" />
	</resultMap>
	
	<!--通过<resultMap>映射实体类属性名和表的字段名对应关系 -->
	<parameterMap id="userInfoParamMap" type="com.spier.common.bean.db.UserInfo" >
		<!-- 用result属性来映射非主键字段 -->
		<parameter property="mName" resultMap="userInfoResultMap" />
		<parameter property="mAppName" resultMap="userInfoResultMap" />
		<parameter property="mChNo" resultMap="userInfoResultMap" />
		<parameter property="mState" resultMap="userInfoResultMap" />
		<parameter property="mIsLoyalty" resultMap="userInfoResultMap" />
		<parameter property="mSessionId" resultMap="userInfoResultMap" />
		<parameter property="mSessionEstablishTime" resultMap="userInfoResultMap" />
		<parameter property="mPhoneInfoId" resultMap="userInfoResultMap" />
		<parameter property="mPhoneNumber" resultMap="userInfoResultMap" />
		<parameter property="mPhoneInfoValid" resultMap="userInfoResultMap" />
		<parameter property="mPhoneInfoInvalidReason" resultMap="userInfoResultMap" />
		<parameter property="mPrivileges" resultMap="userInfoResultMap" />
		<parameter property="mShellVersion" resultMap="userInfoResultMap" />
		<parameter property="mCreateTime" resultMap="userInfoResultMap" />
		<parameter property="mRecentHandshake" resultMap="userInfoResultMap" />
		<parameter property="mIp" resultMap="userInfoResultMap" />
		<parameter property="mCountry" resultMap="userInfoResultMap" />
	</parameterMap>
	
	<!-- 插入用户信息 -->
	<insert id="addUserInfo"  useGeneratedKeys="true" keyProperty="info.mId" keyColumn="_id"
	    parameterType="com.spier.common.bean.db.UserInfo" parameterMap="userInfoParamMap">
		
	    insert into ${tableName} (name, state, loyalty, app, ch_no, session_id, session_es_time, create_time, 
	    phone_info_id, phone_number, privileges, sh_v, ip, country)
	    values 
	    (
	    	#{info.mName},#{info.mState}, #{info.mIsLoyalty}, #{info.mAppName}, #{info.mChNo}, #{info.mSessionId},
	    	#{info.mSessionEstablishTime},NOW(),#{info.mPhoneInfoId},#{info.mPhoneNumber},#{info.mPrivileges},
	    	#{info.mShellVersion}, #{info.mIp}, #{info.mCountry}
	    )
	</insert>
	
	<!-- 根据序列号查询用户信息 -->
	<select id="findUserInfoByInd" parameterType="int" resultMap="userInfoResultMap">
	    select * from ${tableName} where _id=#{ind}
	</select>
	
	<!-- 根据关键字段查询信息行序列号-->
	<select id="findUserInfoIndByKWs" resultType="Integer">
	    select _id from ${tableName} 
	    where name=#{userName} and app=#{appName} and ch_no=#{chno}
	</select>
	
	<!-- 根据关键字段查询信息-->
	<select id="findUserInfoByKWs" resultMap="userInfoResultMap">
	    select * from ${tableName} 
	    where name=#{userName} and app=#{appName} and ch_no=#{chno}
	</select>
	
	<!-- 根据序列号查询入库时间-->
	<select id="getRecordCreateTimeByInd" parameterType="int" resultType="java.sql.Timestamp">
	    select create_time from ${tableName} 
	    where _id=#{ind}
	</select>
	
	<!-- 根据uid查询所有的记录-->
	<select id="findRecordsByUID" parameterType="int" resultMap="userInfoResultMap">
	    select * from ${tableName} 
	    where name=#{uid}
	</select>
	
	<!-- 查询某个时间段内某个渠道的用户数据 -->
	<select id="findRecordsByChanAndCreateTime" resultMap="userInfoResultMap">
	    SELECT 
	    	DISTINCT(name), state, loyalty, app, ch_no, session_id, session_es_time, create_time, phone_info_id,
	    	phone_number, privileges, sh_v, recent_hs_time 
	    FROM ${tableName} 
	    WHERE ch_no = #{chan} AND create_time BETWEEN #{startTime} AND #{endTime}
	</select>
	
	<!-- 查询截止某个时间点的所有留存用户信息 -->
	<select id="findRecordsByChanAndAliveTime" resultMap="userInfoResultMap">
	    SELECT 
	    	DISTINCT(name), state, loyalty, app, ch_no, session_id, session_es_time, create_time, phone_info_id,
	    	phone_number, privileges, sh_v, recent_hs_time
	    FROM ${tableName}
	    WHERE ch_no = #{chan} AND recent_hs_time >= #{time}
	</select>
	
	<!-- 文件信息更新操作，未完成 -->
	<update id="updateUserInfoByInd" parameterType="com.spier.common.bean.db.UserInfo" parameterMap="userInfoParamMap">
	    update ${tableName} t set 
	    	t.name=#{info.mName}, t.state=#{info.mState}, t.app=#{info.mAppName}, 
	    	t.ch_no=#{info.mChNo}, t.session_id=#{info.mSessionId}, t.privileges=#{info.mPrivileges},
	    	t.session_es_time=#{info.mSessionEstablishTime},t.phone_info_id=#{info.mPhoneInfoId},t.phone_number=#{info.mPhoneNumber},
	    	t.sh_v = #{info.mShellVersion},t.ip = #{info.mIp}, t.country = #{info.mCountry}
	    where t._id=#{ind}
	</update>
	
	<!-- 用户会话状态更新-->
	<update id="updateUserSessionDataByInd">
	    update ${tableName} t set t.state=#{user_state}, t.session_id=#{sid}, t.session_es_time=#{es_time} 
	    where t._id=#{ind}
	</update>
	
	<!-- 用户手机号码更新-->
	<update id="updateUserPhoneNumber">
	    update ${tableName} t set t.phone_number=#{pnum}
	    where t.name=#{uid}
	</update>
	
	<!-- 用户权限更新-->
	<update id="updateUserPrivileges">
	    update ${tableName} t set t.privileges = #{privs}, t.state = #{state}
	    where t.name=#{uid}
	</update>
	
	<update id="updateUserPrivsAndLoyalty">
	    UPDATE ${tabName} t 
	    SET t.privileges = #{privs}, t.state = #{state}, t.loyalty = #{loyal}
	    WHERE t.name = #{uid}
	</update>
	
	<!-- 用户留存更新-->
	<update id="updateUserAbsence">
	    UPDATE ${tableName} t SET t.sh_v = #{shv}, t.recent_hs_time = NOW()
	    WHERE t.name = #{uid} AND t.ch_no = #{chan} AND t.app = #{pkg}
	</update>
	
	<!-- 根据ind删除记录 -->
	<delete id="deleteUserInfo" parameterType="int">
	    delete from ${tableName} where _id=#{ind}
	</delete>
	
</mapper>