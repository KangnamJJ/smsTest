server.port=8081
server.context-path=/
server.tomcat.uri-encoding=UTF-8


#配置dubbo信息
#配置服务名称
spring.dubbo.application.name=sdkserver
#注册中心类型连接方式
spring.dubbo.registry=zookeeper://192.168.184.130:2181
#配置服务调用所使用的协议
spring.dubbo.protocol.name=dubbo
#配置服务端口号
spring.dubbo.protocol.port=20880
#配置服务访问地址
#spring.dubbo.protocol.host=localhost
spring.dubbo.scan=com.spier.service
#spring.dubbo.protocol.host=192.168.184.130


#DB Configuration:
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/sdk_server?useUnicode=true&amp;characterEncoding=utf-8&amp;autoReconnect=true&amp
spring.datasource.username=root
spring.datasource.password=1234567890

spring.datasource.initialSize=3
spring.datasource.minIdle=3
spring.datasource.maxActive=3
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall

dubbo: 
    application:
      id: auth-branch
      name: auth-branch
    registry: 
      address: zookeeper://192.168.184.130:2181
    protocol:
      id: dubbo
      name: dubbo
      port: 20880
      status: server
    scan: com.spier.service.impl  
    
    dubbo:
    application:
      name: sdkserver
    registry: zookeeper://192.168.184.130:2181
    protocol:
      name: dubbo 
      port: 20880
    scan: com.spier.service
    
spring:
  datasource:
    username: root
    password: 1234567890
    url: jdbc:mysql://localhost:3306/sdk_server?useUnicode=true&amp;characterEncoding=UTF-8
    driver-class-name: com.mysql.jdbc.Driver 
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initial-size: 5
    min-idle: 5
    max-active: 20
    # 配置获取连接等待超时的时间
    max-wait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    time-between-eviction-runs-millis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    min-evictable-idle-time-millis: 300000
    validation-query: SELECT 1 FROM DUAL
    test-while-idle: true
    test-on-borrow: false
    test-on-return: false
    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    max-pool-prepared-statement-per-connection-size: 20
    filters: stat,wall,log4j

